attack_types:
- Callback Phishing
description: Callback Phishing via a text-based file attachment and a short body and
  subject from an unknown sender.
detection_methods:
- Content analysis
- File analysis
- Header analysis
- Sender analysis
id: ca39c83a-b308-532d-894b-528bdaef2748
name: 'Attachment: Callback phishing solicitation via text-based file'
severity: medium
source: "type.inbound\nand length(subject.subject) <= 10\n// there are no links, all\
  \ the links are to aka.ms, or an extraction from a warning banner that match the\
  \ senders domain\nand (\n  length(body.links) == 0\n  or length(filter(body.links,\n\
  \                   (\n                     .display_text is null\n            \
  \         and .display_url.url == sender.email.domain.root_domain\n            \
  \       )\n                   or  .href_url.query_params == \"domain=aka.ms\"\n\
  \                   or network.whois(.display_url.domain).days_old < 30\n      \
  \      )\n  ) == length(body.links)\n)\nand (body.current_thread.text is null or\
  \ length(body.current_thread.text) < 50)\nand 0 < length(attachments) < 4\nand any(attachments,\n\
  \        (.content_type == \"text/plain\" or .file_type in (\"doc\", \"docx\"))\n\
  \        and any(file.explode(.),\n                (.depth == 0 or .flavors.mime\
  \ == \"text/plain\")\n                and any(.scan.strings.strings,\n         \
  \               strings.ilike(.,\n                                      \"*mcafee*\"\
  ,\n                                      \"*norton*\",\n                       \
  \               \"*geek squad*\",\n                                      \"*paypal*\"\
  ,\n                                      \"*ebay*\",\n                         \
  \             \"*symantec*\",\n                                      \"*best buy*\"\
  ,\n                                      \"*lifelock*\",\n                     \
  \                 \"*geek total*\"\n                        )\n                \
  \        and any(..scan.strings.strings,\n                                regex.icontains(.,\n\
  \                                                '\\b\\+?(\\d{1}.)?\\(?\\d{3}?\\\
  )?.~?.?\\d{3}.?~?.\\d{4}\\b',\n                                                '\\\
  +?([ilo0-9]{1}.)?\\(?[ilo0-9]{3}?\\)?.[ilo0-9]{3}.?[ilo0-9]{4}',\n             \
  \                                   '\\+?([ilo0-9]{1,2})?\\s?\\(?\\d{3}\\)?[\\s\\\
  .\\-\u22C5]{0,5}[ilo0-9]{3}[\\s\\.\\-\u22C5]{0,5}[ilo0-9]{4}'\n                \
  \                )\n                        )\n                )\n        )\n)\n\
  and profile.by_sender().prevalence != \"common\"\nand not profile.by_sender().solicited\n\
  and not profile.by_sender().any_messages_benign\n\n// negate highly trusted sender\
  \ domains unless they fail DMARC authentication\nand (\n  (\n    sender.email.domain.root_domain\
  \ in $high_trust_sender_root_domains\n    and (\n      any(distinct(headers.hops,\
  \ .authentication_results.dmarc is not null),\n          strings.ilike(.authentication_results.dmarc,\
  \ \"*fail\")\n      )\n    )\n  )\n  or sender.email.domain.root_domain not in $high_trust_sender_root_domains\n\
  )"
tactics_and_techniques:
- Evasion
- Out of band pivot
- Social engineering
tags:
- Mimecast Changes Complete
type: rule
