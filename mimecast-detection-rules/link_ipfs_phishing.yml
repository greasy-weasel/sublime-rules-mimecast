attack_types:
- Credential Phishing
- Malware/Ransomware
description: Detects messages containing links that have 'ipfs' in the domain, or
  unanalyzed links that contain 'ipfs' in the url. IPFS has been recently observed
  hosting phishing sites.
detection_methods:
- Sender analysis
- URL analysis
id: 19fa6442-83b9-5479-ba04-61906b595929
name: 'Link: IPFS'
references:
- https://securelist.com/ipfs-phishing/109158/
- https://docs.ipfs.tech/how-to/address-ipfs-on-web/
severity: medium
source: |-
  type.inbound
  and any(body.links,
          // Any body link domains contain "ipfs"
          (
            strings.icontains(.href_url.domain.domain, "ipfs")
            and not  strings.ends_with(.href_url.query_params,"ipfs.com")
          )

          // Or the path contains ipfs anchored to a leading and trailing '-', '/', '.'
          or (
            regex.icontains(.href_url.query_params, '[\.-/]ipfs[\.-/]')
            and  not(any($org_domains, ..href_url.query_params == strings.concat("domain=",.)))
            and (
              (
                // don't include high rep domains
                 not(any($tranco_1m, ..href_url.query_params == strings.concat("domain=",.)))
                and  not(any($umbrella_1m, ..href_url.query_params == strings.concat("domain=",.)))
              )
              // if it's in Tranco or Umbrella, still include it if it's one of these
              or  any($free_file_hosts, ..href_url.query_params == strings.concat("domain=",.))
              or  any($free_file_hosts, strings.ends_with(..href_url.query_params,.))
              or  any($free_subdomain_hosts, strings.ends_with(..href_url.query_params,.))
            )
          )
  )

  // adding negation block for legitimate domains with ipfs in their name
  and not sender.email.domain.domain in ("shipfsl.com")

  // negate ipfs.com issues
  and not any(recipients.to, .email.domain.domain == "ipfs.com")
  and not (
      sender.email.domain.root_domain is not null
      and sender.email.domain.root_domain == "ipfs.com"
    and headers.auth_summary.dmarc.pass
  )

  and (
    not profile.by_sender().solicited
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_messages_benign
    )
  )
  and not profile.by_sender().any_messages_benign
tactics_and_techniques:
- Free file host
- Free subdomain host
- IPFS
tags:
- Mimecast Hard to Fix
type: rule
