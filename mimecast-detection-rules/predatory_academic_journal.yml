attack_types:
- BEC/Fraud
- Spam
description: Detects messages related to academic research and publishing that contain
  suspicious patterns including character manipulation, flattering language, time
  pressure tactics, and domain registration anomalies. Focuses on unsolicited invitations
  for manuscript submissions, peer reviews, or editorial roles.
detection_methods:
- Natural Language Understanding
- Content analysis
- Sender analysis
- URL analysis
- Whois
id: 263ca56b-d31b-5b38-b00e-c1c45e5e96bb
name: 'Spam/fraud: Predatory journal/research paper request'
severity: medium
source: "type.inbound\nand any(beta.ml_topic(body.current_thread.text).topics,\n \
  \       .name == \"Educational and Research\"\n        and .confidence in (\"medium\"\
  , \"high\")\n)\nand not any(beta.ml_topic(body.current_thread.text).topics,\n  \
  \          .name in (\"Health and Wellness\") and .confidence == \"high\"\n)\nand\
  \ ml.nlu_classifier(body.current_thread.text).language == \"english\"\nand 3 of\
  \ (\n  regex.count(body.current_thread.text,\n              '[\xC6\xD7\xE6\u0131\
  -\u0133\u0149\u0152\u0153\u0181\u0184\u0187\u018A\u018D\u0193\u0196\u0198\u01A0\u01A1\
  \u01A4\u01A6\u01A7\u01AC\u01B3\u01B7\u01BC\u01BD\u01C0\u01C1\u01C7-\u01CC\u01F1\
  -\u01F3\u021C\u0222\u0223\u0251\u0261\u0263\u0269\u026A\u026F\u028B\u028F\u02A3\u02A6\
  \u02AA\u02AB\u02DB\u037A\u037F\u0391\u0392\u0395-\u0397\u0399\u039A\u039C\u039D\u039F\
  \u03A1\u03A4\u03A5\u03A7\u03B1\u03B3\u03B9\u03BD\u03BF\u03C1\u03C3\u03C5\u03D2\u03DC\
  \u03E8\u03F1-\u03F3\u03F9\u03FA\u0405\u0406\u0408\u0410\u0412\u0415\u0417\u041A\u041C\
  -\u041E\u0420-\u0423\u0425\u042B\u042C\u042E\u0430\u0431\u0433\u0435\u043E\u0440\
  \u0441\u0443\u0445\u0455\u0456\u0458\u0461\u0474\u0475\u0491\u04AE\u04AF\u04BB\u04BD\
  \u04C0\u04CF\u04D4\u04D5\u04E0\u0501\u050C\u051B-\u051D\u054D\u054F\u0555\u0561\u0563\
  \u0566\u0570\u0578\u057C\u057D\u0581\u0584\u0585\u05C0\u05D5\u05D8\u05DF\u05E1\u05F0\
  \u05F1\u0627\u0647\u0661\u0665\u0667\u06BE\u06C1\u06D5\u06F1\u06F5\u06F7\u07C0\u07CA\
  \u0966\u09E6\u09EA\u09ED\u0A66\u0A67\u0A6A\u0B20\u0B66\u0B68\u0D20\u0D66\u0E50\u0ED0\
  \u101D\u1040\u10E7\u10FF\u1200\u12D0\u13A0-\u13A2\u13A4\u13A5\u13A9-\u13AC\u13B3\
  \u13B7\u13BB\u13BD\u13C0\u13C2\u13C3\u13CE\u13CF\u13D2\u13D4\u13D5\u13D9\u13DA\u13DE\
  \u13DF\u13E2\u13E6\u13E7\u13EE\u13F3\u13F4\u142F\u144C\u1467\u146D\u146F\u1472\u1486\
  -\u1488\u148D\u14AA\u14BF\u1541\u157C\u157D\u1587\u15AF\u15B4\u15C5\u15DE\u15EA\u15F0\
  \u15F7\u166D\u166E\u16B7\u16C1\u16D5\u16D6\u1D04\u1D0F\u1D11\u1D1C\u1D20-\u1D22\u1D26\
  \u1D6B\u1D83\u1D8C\u1E9D\u1EFF\u03B9\u2016\u20A8\u20B6\u2100-\u2102\u2105\u2106\u210A\
  -\u210E\u2110-\u2113\u2115\u2116\u2119-\u211D\u2121\u2124\u2128\u212C-\u2131\u2133\
  \u2134\u2139\u213B\u213D\u2145-\u2149\u2160-\u217F\u221E\u2223\u2225\u2228\u222A\
  \u22A4\u22C1\u22C3\u22FF\u2373\u2374\u237A\u23FD\u2474-\u24B5\u2573\u27D9\u292B\u292C\
  \u2A2F\u2C85\u2C8E\u2C92\u2C94\u2C98\u2C9A\u2C9E\u2C9F\u2CA2-\u2CA6\u2CA8\u2CAC\u2CCA\
  \u2CCC\u2CD0\u2CD2\u2D38\u2D39\u2D4F\u2D54\u2D55\u2D5D\u3007\uA4D0-\uA4D4\uA4D6\uA4D7\
  \uA4D9\uA4DA\uA4DC\uA4DD\uA4DF-\uA4E3\uA4E6\uA4E7\uA4EA-\uA4EC\uA4EE\uA4F0\uA4F2\
  -\uA4F4\uA644\uA647\uA698\uA699\uA6DF\uA6EF\uA728\uA731-\uA73D\uA74E\uA74F\uA75A\
  \uA76A\uA76E\uA777\uAB75\uAB81\uAB83\uAB93\uABA9\uABAA\uABAF\uFB00-\uFB04\uFB06\uFBA6\
  -\uFBAD\uFE8D\uFE8E\uFEE9-\uFEEC\uFF21-\uFF23\uFF25\uFF28-\uFF2B\uFF2D-\uFF30\uFF33\
  \uFF34\uFF38-\uFF3A\uFF41\uFF43\uFF45\uFF47-\uFF4A\uFF4C\uFF4F\uFF50\uFF53\uFF56\
  \uFF58\uFF59\uFFE8\U00010282\U00010286\U00010287\U0001028A\U00010290\U00010292\U00010295\
  -\U00010297\U000102A0-\U000102A2\U000102A5\U000102AB\U000102B0-\U000102B2\U000102B4\
  \U000102CF\U000102F5\U00010301\U00010302\U00010309\U00010311\U00010315\U00010317\
  \U0001031A\U00010320\U00010322\U00010404\U00010415\U0001041B\U00010420\U0001042C\
  \U0001043D\U00010448\U000104B4\U000104C2\U000104CE\U000104D2\U000104EA\U000104F6\
  \U00010513\U00010516\U00010518\U0001051C\U0001051D\U00010525-\U00010527\U000114D0\
  \U00011700\U00011706\U0001170A\U0001170E\U0001170F\U000118A0\U000118A2-\U000118A4\
  \U000118A6\U000118A9\U000118AC\U000118AE\U000118AF\U000118B2\U000118B5\U000118B8\
  \U000118BB\U000118BC\U000118C0-\U000118C4\U000118C6\U000118C8\U000118CA\U000118CC\
  \U000118D5-\U000118D8\U000118DC\U000118E0\U000118E3\U000118E5\U000118E6\U000118E9\
  \U000118EC\U000118EF\U000118F2\U00016F08\U00016F0A\U00016F16\U00016F28\U00016F35\
  \U00016F3A\U00016F3B\U00016F40\U00016F42\U00016F43\U0001D400-\U0001D454\U0001D456\
  -\U0001D49C\U0001D49E\U0001D49F\U0001D4A2\U0001D4A5\U0001D4A6\U0001D4A9-\U0001D4AC\
  \U0001D4AE-\U0001D4B9\U0001D4BB\U0001D4BD-\U0001D4C3\U0001D4C5-\U0001D505\U0001D507\
  -\U0001D50A\U0001D50D-\U0001D514\U0001D516-\U0001D51C\U0001D51E-\U0001D539\U0001D53B\
  -\U0001D53E\U0001D540-\U0001D544\U0001D546\U0001D54A-\U0001D550\U0001D552-\U0001D6A4\
  \U0001D6A8\U0001D6A9\U0001D6AC-\U0001D6AE\U0001D6B0\U0001D6B1\U0001D6B3\U0001D6B4\
  \U0001D6B6\U0001D6B8\U0001D6BB\U0001D6BC\U0001D6BE\U0001D6C2\U0001D6C4\U0001D6CA\
  \U0001D6CE\U0001D6D0\U0001D6D2\U0001D6D4\U0001D6D6\U0001D6E0\U0001D6E2\U0001D6E3\
  \U0001D6E6-\U0001D6E8\U0001D6EA\U0001D6EB\U0001D6ED\U0001D6EE\U0001D6F0\U0001D6F2\
  \U0001D6F5\U0001D6F6\U0001D6F8\U0001D6FC\U0001D6FE\U0001D704\U0001D708\U0001D70A\
  \U0001D70C\U0001D70E\U0001D710\U0001D71A\U0001D71C\U0001D71D\U0001D720-\U0001D722\
  \U0001D724\U0001D725\U0001D727\U0001D728\U0001D72A\U0001D72C\U0001D72F\U0001D730\
  \U0001D732\U0001D736\U0001D738\U0001D73E\U0001D742\U0001D744\U0001D746\U0001D748\
  \U0001D74A\U0001D754\U0001D756\U0001D757\U0001D75A-\U0001D75C\U0001D75E\U0001D75F\
  \U0001D761\U0001D762\U0001D764\U0001D766\U0001D769\U0001D76A\U0001D76C\U0001D770\
  \U0001D772\U0001D778\U0001D77C\U0001D77E\U0001D780\U0001D782\U0001D784\U0001D78E\
  \U0001D790\U0001D791\U0001D794-\U0001D796\U0001D798\U0001D799\U0001D79B\U0001D79C\
  \U0001D79E\U0001D7A0\U0001D7A3\U0001D7A4\U0001D7A6\U0001D7AA\U0001D7AC\U0001D7B2\
  \U0001D7B6\U0001D7B8\U0001D7BA\U0001D7BC\U0001D7BE\U0001D7C8\U0001D7CA\U0001D7CE\
  ]'\n  ) > 100,\n  regex.icontains(strings.replace_confusables(body.current_thread.text),\n\
  \                  \"Impact Factor\",\n                  \"Special Issue\",\n  \
  \                \"Guest Editor\",\n                  \"peer-review\",\n       \
  \           \"manuscript\",\n                  \"workshop\",\n                 \
  \ \"journal (of|editor)\",\n                  \"inclusive research\",\n        \
  \          \"abstract\",\n                  \"open-access\",\n                 \
  \ \"upcoming edition\",\n                  \"title of (your (work|published article)|the\
  \ study)\",\n                  \"your paper's title\",\n                  \"and\
  \ the abstract\",\n                  \"abstract of (your work|the study)\",\n  \
  \                \"detailed abstract\",\n                  'contribution\\b',\n\
  \                  \"accepted paper\",\n                  \"submit.{0,20}.(manuscript|article)\"\
  ,\n                  \"call for editorial\",\n                  \"reviewer team\"\
  ,\n                  \"review.{0,15}.(journal|issue)\"\n  ),\n\n  // flattering\
  \ language, as seen in previous research\n  regex.icontains(strings.replace_confusables(body.current_thread.text),\n\
  \                  'your\\s+(article|paper|research|publication|work)\\s+\"?[^\"\
  ]+?\"?\\s+(is\\s+very\\s+excellent|strongly\\s+reflects|will\\s+be\\s+a\\s+valuable)',\n\
  \                  'we\\s+believe\\s+(that\\s+)?your\\s+(experience|perspective|expertise|comments?)\\\
  s+(will\\s+add|can\\s+play|will\\s+be)\\s+.{0,100}(important|valuable)',\n     \
  \             '(you\\s+are\\s+one\\s+of\\s+the\\s+leading\\s+experts?|someone\\\
  s+of\\s+your\\s+caliber)',\n                  '(emerging\\s+voices?\\s+like\\s+yours|shape\\\
  s+the\\s+scholarly\\s+direction)',\n                  '(learning\\s+from\\s+the\\\
  s+internet|know\\s+your\\s+\"[^\"]+\"\\s+is\\s+very\\s+excellent)',\n          \
  \        '(world''s|global|international)\\s+(foremost|leading|top|premier)\\s+(authorities|experts|researchers)',\n\
  \                  // The \"highly valued\" variants\n                  'your\\\
  s+(participation|contribution|presence|involvement)\\s+(would\\s+be|is)\\s+(highly|greatly|immensely|extremely)\\\
  s+(valued|appreciated|welcomed)',\n\n                  // Time pressure tactics\n\
  \                  '(short\\s+notice|busy\\s+schedule|quick\\s+turnaround|urgent\\\
  s+deadline|limited\\s+slots)',\n\n                  // \"No charge\" red flags\n\
  \                  '(no\\s+charge|free\\s+of\\s+charge|waived\\s+fee|complimentary|at\\\
  s+no\\s+cost)',\n\n                  // Vague topic promises\n                 \
  \ '(topic\\s+of\\s+your\\s+choice|any\\s+topic\\s+related|broad\\s+range\\s+of\\\
  s+topics|multidisciplinary\\s+approach)',\n\n                  // Easy publication\
  \ promises\n                  '(guaranteed\\s+publication|fast\\s+track\\s+review|expedited\\\
  s+process|will\\s+not\\s+be\\s+too\\s+time-consuming)',\n\n                  //\
  \ Template giveaways\n                  '(do\\s+hope\\s+you\\s+can\\s+make\\s+time|kindly\\\
  s+submit|gentle\\s+reminder|esteemed\\s+researcher)'\n  ),\n\n  // Message contains\
  \ the users last name, but not their first name\n  // Presumably, this is because\
  \ names are listed that way on academic papers\n  strings.icontains(body.current_thread.text,\
  \ mailbox.last_name)\n  and not strings.icontains(body.current_thread.text, mailbox.first_name)\n\
  \  and not any(recipients.to,\n              strings.icontains(body.current_thread.text,\
  \ .email.email)\n  )\n  and length(mailbox.last_name) > 4,\n\n  // Or, message contains\
  \ the users last, first\n  // Example: Doe, John\n  // Presumably, this is because\
  \ names are listed that way on academic papers\n  strings.icontains(body.current_thread.text,\n\
  \                    strings.concat(mailbox.last_name, \", \", mailbox.first_name)\n\
  \  ),\n\n  // new sender or link domain\n  network.whois(sender.email.domain).days_old\
  \ < 90,\n  any(body.links, network.whois(.href_url.domain).days_old < 90),\n\n \
  \ // Crossref DOI registration abuse (https://doi.org/10.29328)\n  any(body.links,\n\
  \       strings.ends_with(.href_url.query_params,\"doi.org\")\n      and strings.istarts_with(.href_url.path,\
  \ '/10.29328')\n  ),\n\n  // Sender does not match original thread sender\n  length(body.previous_threads)\
  \ > 0\n  and any(regex.iextract(body.html.display_text, 'From: (?P<email_address>\\\
  S*)'),\n          strings.parse_email(.named_groups['email_address']).email != sender.email.email\n\
  \  ),\n\n  // sent from Windows Server with default name\n  strings.contains(headers.message_id,\
  \ \"@DESKTOP-\"),\n\n  // requesting a manuscript review\n  strings.ilike(body.current_thread.text,\
  \ \"*review*\")\n  and strings.ilike(body.current_thread.text, \"*manuscript*\"\
  , \"*submission*\"),\n\n  // Chinese registrant country\n  network.whois(sender.email.domain).registrant_country_code\
  \ == \"CN\",\n  any(body.links,\n      network.whois(.href_url.domain).registrant_country_code\
  \ == \"CN\"\n  ),\n\n  // Alibaba infrastructure\n  any(headers.domains, .root_domain\
  \ in (\"aliyun.com\", \"aliyun-inc.com\")),\n\n  // Known predatory journals that\
  \ we've observed and matched to beallslist.net\n  sender.email.domain.root_domain\
  \ in (\n    \"iris-research.net\",\n    \"irispublishers.com\",\n    \"lidsen.com\"\
  \n  ),\n\n  // sender domain and body link domains do not match, but have the same\
  \ registration details\n  (\n    length(body.links) > 0\n    and all(body.links,\n\
  \            (\n              network.whois(.href_url.domain).registrant_company\
  \ == network.whois(sender.email.domain\n              ).registrant_company\n   \
  \           and network.whois(.href_url.domain).registrar_name == network.whois(sender.email.domain\n\
  \              ).registrar_name\n            )\n            and  not(strings.ends_with(.href_url.query_params,sender.email.domain.root_domain))\n\
  \    )\n  ),\n\n  // known patterns\n  any(body.links, regex.imatch(.href_url.path,\
  \ '^/ey[a-z]/.{2,}$'))\n)\n\n// negate microsoft quarantine messages\nand not (\n\
  \  any(body.links,\n      (\n        strings.icontains(.display_text, \"Review Message\"\
  )\n        or strings.icontains(.display_text, \"Passer en revue le message\")\n\
  \      )\n      and (\n         .href_url.query_params == \"domain=security.microsoft.com\"\
  \n        and .href_url.path == \"/quarantine\"\n      )\n  )\n)"
tactics_and_techniques:
- Social engineering
- 'Impersonation: Brand'
- Lookalike domain
- Evasion
tags:
- Mimecast Hard to Fix
type: rule
