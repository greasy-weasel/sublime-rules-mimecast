attack_types:
- Credential Phishing
description: |-
  Message contains various suspicious indicators as well as engaging language resembling credential theft from an untrusted sender.
detection_methods:
- Content analysis
- Header analysis
- Natural Language Understanding
- Sender analysis
- URL analysis
id: c2bc8ca2-d207-5c7d-96e4-a0d3d33b2af5
name: 'Credential phishing: Engaging language and other indicators (untrusted sender)'
severity: medium
source: "type.inbound\nand (\n  regex.icontains(subject.subject,\n               \
  \   \"termination.*notice\",\n                  \"38417\",\n                  \"\
  :completed\",\n                  \"[il1]{2}mit.*ma[il1]{2} ?bo?x\",\n          \
  \        \"[il][il][il]egai[ -]\",\n                  \"[li][li][li]ega[li] attempt\"\
  ,\n                  \"[ng]-?[io]n .*block\",\n                  \"[ng]-?[io]n .*cancel\"\
  ,\n                  \"[ng]-?[io]n .*deactiv\",\n                  \"[ng]-?[io]n\
  \ .*disabl\",\n                  \"action.*required\",\n                  \"abandon.*package\"\
  ,\n                  \"about.your.account\",\n                  \"acc(ou)?n?t (is\
  \ )?on ho[li]d\",\n                  \"acc(ou)?n?t.*terminat\",\n              \
  \    \"acc(oun)?t.*[il1]{2}mitation\",\n                  \"access.*limitation\"\
  ,\n                  \"account (will be )?block\",\n                  \"account.*de-?activat\"\
  ,\n                  \"account.*locked\",\n                  \"account.*re-verification\"\
  ,\n                  \"account.*security\",\n                  \"account.*suspension\"\
  ,\n                  \"account.has.expired\",\n                  \"account.will.be.blocked\"\
  ,\n                  \"account v[il]o[li]at\",\n                  \"activity.*acc(oun)?t\"\
  ,\n                  \"almost.full\",\n                  \"app[li]e.[il]d\",\n \
  \                 \"authenticate.*account\",\n                  \"been.*suspend\"\
  ,\n                  \"crediential.*notif\",\n                  \"clos.*of.*account.*processed\"\
  ,\n                  \"confirm.your.account\",\n                  \"courier.*able\"\
  ,\n                  \"crediential.*notif\",\n                  \"deactivation.*in.*progress\"\
  ,\n                  \"delivery.*attempt.*failed\",\n                  \"disconnection.*notice\"\
  ,\n                  \"document.received\",\n                  \"documented.*shared.*with.*you\"\
  ,\n                  \"dropbox.*document\",\n                  \"e-?ma[il1]+ .{010}suspen\"\
  ,\n                  \"e-?ma[il1]{1} user\",\n                  \"e-?ma[il1]{2}\
  \ acc\",\n                  \"e-?ma[il1]{2} preview\",\n                  \"e-?ma[il1]{2}.*up.?grade\"\
  ,\n                  \"e.?ma[il1]{2}.*server\",\n                  \"e.?ma[il1]{2}.*suspend\"\
  ,\n                  \"email.update\",\n                  \"faxed you\",\n     \
  \             \"fraud(ulent)?.*charge\",\n                  \"from.helpdesk\",\n\
  \                  \"fu[il1]{2}.*ma[il1]+[ -]?box\",\n                  \"has.been.*suspended\"\
  ,\n                  \"has.been.limited\",\n                  \"have.locked\",\n\
  \                  \"he[li]p ?desk upgrade\",\n                  \"heipdesk\",\n\
  \                  \"i[il]iega[il]\",\n                  \"ii[il]ega[il]\",\n  \
  \                \"incoming e?mail\",\n                  \"incoming.*fax\",\n  \
  \                \"lock.*security\",\n                  \"ma[il1]{1}[ -]?box.*quo\"\
  ,\n                  \"ma[il1]{2}[ -]?box.*fu[il1]\",\n                  \"ma[il1]{2}box.*[il1]{2}mit\"\
  ,\n                  \"ma[il1]{2}box stor\",\n                  \"mail on.?hold\"\
  ,\n                  \"mail.*box.*migration\",\n                  \"mail.*de-?activat\"\
  ,\n                  \"mail.update.required\",\n                  \"mails.*pending\"\
  ,\n                  \"messages.*pending\",\n                  \"missed.*shipping.*notification\"\
  ,\n                  \"missed.shipment.notification\",\n                  \"must.update.your.account\"\
  ,\n                  \"new [sl][io]g?[nig][ -]?in from\",\n                  \"\
  new voice ?-?mail\",\n                  \"notifications.*pending\",\n          \
  \        \"office.*3.*6.*5.*suspend\",\n                  \"office365\",\n     \
  \             \"on google docs with you\",\n                  \"online doc\",\n\
  \                  \"password.*compromised\",\n                  \"(?:payroll|salary|bonus).*Distribution\"\
  ,\n                  \"periodic maintenance\",\n                  \"potential(ly)?\
  \ unauthorized\",\n                  \"refund not approved\",\n                \
  \  \"report\",\n                  \"revised.*policy\",\n                  \"scam\"\
  ,\n                  \"scanned.?invoice\",\n                  \"secured?.update\"\
  ,\n                  \"security breach\",\n                  \"securlty\",\n   \
  \               \"signed.*delivery\",\n                  \"status of your .{314}?\
  \ ?delivery\",\n                  \"susp[il1]+c[il1]+ous.*act[il1]+v[il1]+ty\",\n\
  \                  \"suspicious.*sign.*[io]n\",\n                  \"suspicious.activit\"\
  ,\n                  \"temporar(il)?y deactivate\",\n                  \"temporar[il1]{2}y\
  \ disab[li]ed\",\n                  \"temporarily.*lock\",\n                  \"\
  un-?usua[li].activity\",\n                  \"unable.*deliver\",\n             \
  \     \"unauthorized.*activit\",\n                  \"unauthorized.device\",\n \
  \                 \"undelivered message\",\n                  \"unread.*doc\",\n\
  \                  \"unusual.activity\",\n                  \"(?:unrecognized|Unusual|suspicious|unknown)\
  \ (?:log|sign).?[io]n attempt\",\n                  \"upgrade.*account\",\n    \
  \              \"upgrade.notice\",\n                  \"urgent message\",\n    \
  \              \"urgent.verification\",\n                  \"v[il1]o[li1]at[il1]on\
  \ security\",\n                  \"va[il1]{1}date.*ma[il1]{2}[ -]?box\",\n     \
  \             \"verification ?-?require\",\n                  \"verification( )?-?need\"\
  ,\n                  \"verify.your?.account\",\n                  \"web ?-?ma[il1]{2}\"\
  ,\n                  \"web[ -]?ma[il1]{2}\",\n                  \"will.be.suspended\"\
  ,\n                  \"your (customer )?account .as\",\n                  \"your.office.365\"\
  ,\n                  \"your.online.access\",\n                  \"de.activation\"\
  ,\n                  // https://github.com/sublime-security/static-files/blob/master/suspicious_subjects.txt\n\
  \                  \"account has been limited\",\n                  \"action required\"\
  ,\n                  \"almost full\",\n                  \"apd notifi cation\",\n\
  \                  \"are you at your desk\",\n                  \"are you available\"\
  ,\n                  \"attached file to docusign\",\n                  \"banking\
  \ is temporarily unavailable\",\n                  \"bankofamerica\",\n        \
  \          \"closing statement invoice\",\n                  \"completed: docusign\"\
  ,\n                  \"de-activation of\",\n                  \"delivery attempt\"\
  ,\n                  \"delivery stopped for shipment\",\n                  \"detected\
  \ suspicious\",\n                  \"detected suspicious actvity\",\n          \
  \        \"docu sign\",\n                  \"document for you\",\n             \
  \     \"document has been sent to you via docusign\",\n                  \"document\
  \ is ready for signature\",\n                  \"docusign\",\n                 \
  \ \"encrypted message\",\n                  \"failed delivery\",\n             \
  \     \"fedex tracking\",\n                  \"file was shared\",\n            \
  \      \"freefax\",\n                  \"fwd: due invoice paid\",\n            \
  \      \"has shared\",\n                  \"inbox is full\",\n                 \
  \ \"invitation to comment\",\n                  \"invitation to edit\",\n      \
  \            \"invoice due\",\n                  \"left you a message\",\n     \
  \             \"message from\",\n                  \"new message\",\n          \
  \        \"new voicemail\",\n                  \"on desk\",\n                  \"\
  out of space\",\n                  \"password reset\",\n                  \"payment\
  \ status\",\n                  \"pay notification\",\n                  \"quick\
  \ reply\",\n                  \"re: w-2\",\n                  \"required\",\n  \
  \                \"required: completed docusign\",\n                  \"remittance\"\
  ,\n                  \"ringcentral\",\n                  \"scanned image\",\n  \
  \                \"secured files\",\n                  \"secured pdf\",\n      \
  \            \"security alert\",\n                  \"new sign-in\",\n         \
  \         \"new sign in\",\n                  \"sign-in attempt\",\n           \
  \       \"sign in attempt\",\n                  \"staff review\",\n            \
  \      \"suspicious activity\",\n                  \"unrecognized login attempt\"\
  ,\n                  \"unusual signin\",\n                  \"upgrade immediately\"\
  ,\n                  \"urgent\",\n                  \"wants to share\",\n      \
  \            \"w2\",\n                  \"you have notifications pending\",\n  \
  \                \"your account\",\n                  \"your amazon order\",\n \
  \                 \"your document settlement\",\n                  \"your order\
  \ with amazon\",\n                  \"your password has been compromised\",\n  )\n\
  \  or (\n    regex.icontains(subject.subject, 'account.has.been')\n    and not regex.icontains(subject.subject,\
  \ 'account.has.been.*created')\n  )\n  or (\n    regex.icontains(sender.display_name,\n\
  \                    \"Admin\",\n                    \"Administrator\",\n      \
  \              \"Alert\",\n                    \"Assistant\",\n                \
  \    \"Authenticat(or|ion)\",\n                    \"Billing\",\n              \
  \      \"Benefits\",\n                    \"Bonus\",\n                    \"CEO\"\
  ,\n                    \"CFO\",\n                    \"CIO\",\n                \
  \    \"CTO\",\n                    \"Chairman\",\n                    \"Claim\"\
  ,\n                    \"Confirm\",\n                    \"Cpanel Mail\",\n    \
  \                \"Critical\",\n                    \"Customer Service\",\n    \
  \                \"Deal\",\n                    \"Discount\",\n                \
  \    \"Director\",\n                    \"Exclusive\",\n                    \"Executive\"\
  ,\n                    \"Fax\",\n                    \"Free\",\n               \
  \     \"Gift\",\n                    '\\bHR\\b',\n                    \"Helpdesk\"\
  ,\n                    \"Human Resources\",\n                    \"Immediate\",\n\
  \                    \"Important\",\n                    \"Info\",\n           \
  \         \"Information\",\n                    \"Invoice\",\n                 \
  \   '\\bIT\\b',\n                    '\\bLegal\\b',\n                    \"Lottery\"\
  ,\n                    \"Management\",\n                    \"Manager\",\n     \
  \               \"Member Services\",\n                    \"Notification\",\n  \
  \                  \"Offer\",\n                    \"Official Communication\",\n\
  \                    \"Operations\",\n                    \"Order\",\n         \
  \           \"Partner\",\n                    \"Payment\",\n                   \
  \ \"Payroll\",\n                    \"Postmaster\",\n                    \"President\"\
  ,\n                    \"Premium\",\n                    \"Prize\",\n          \
  \          \"Receipt\",\n                    \"Refund\",\n                    \"\
  Registrar\",\n                    \"Required\",\n                    \"Reward\"\
  ,\n                    \"Sales\",\n                    \"Secretary\",\n        \
  \            \"Security\",\n                    \"Service\",\n                 \
  \   \"Storage\",\n                    \"Support\",\n                    \"Sweepstakes\"\
  ,\n                    \"System\",\n                    \"Tax\",\n             \
  \       \"Tech Support\",\n                    \"Update\",\n                   \
  \ \"Upgrade\",\n                    \"Urgent\",\n                    \"Validate\"\
  ,\n                    \"Verify\",\n                    \"VIP\",\n             \
  \       \"Webmaster\",\n                    \"Winner\",\n    )\n    // add negation\
  \ for common FPs in the sender display_name\n    and not strings.icontains(sender.display_name,\
  \ \"service bulletin\")\n    and not strings.icontains(sender.display_name, \"automotive\
  \ service\")\n  )\n)\nand (\n  4 of (\n    any(recipients.to,\n        .email.domain.valid\n\
  \        and (\n          strings.icontains(body.current_thread.text, .email.email)\n\
  \          or strings.icontains(body.current_thread.text, .email.local_part)\n \
  \       )\n    ),\n    any(ml.nlu_classifier(body.current_thread.text).intents,\n\
  \        .name == \"cred_theft\" and .confidence in (\"medium\", \"high\")\n   \
  \ ),\n    any(ml.nlu_classifier(body.current_thread.text).entities,\n        .name\
  \ == \"request\"\n    ),\n    (\n      // freemail providers should never be sending\
  \ this type of email\n      sender.email.domain.domain in $free_email_providers\n\
  \n      // if not freemail, it's suspicious if the sender's root domain\n      //\
  \ doesn't match any links in the body\n      or all(body.links,\n              not(strings.ends_with(.href_url.query_params,sender.email.domain.root_domain))\n\
  \             and  not(any($org_domains, strings.ends_with(..href_url.query_params,.)))\n\
  \      )\n\n      // bulk mailers should also never be sending this type of email\n\
  \      or all(filter(body.links,\n                    .href_url.domain.domain not\
  \ in (\n                      \"aka.ms\",\n                      \"mimecast.com\"\
  ,\n                      \"mimecastprotect.com\",\n                      \"cisco.com\"\
  \n                    )\n             ),\n              any($bulk_mailer_url_root_domains,\
  \ strings.ends_with(..href_url.query_params,.))\n      )\n    ),\n    // in case\
  \ it's embedded in an image attachment\n    // note: don't use message_screenshot()\
  \ because it's not limited to current_thread\n    // and may FP\n    any(attachments,\n\
  \        .file_type in $file_types_images\n        and any(file.explode(.),\n  \
  \              any(ml.nlu_classifier(.scan.ocr.raw).intents,\n                 \
  \   .name == \"cred_theft\" and .confidence == \"high\"\n                )\n   \
  \     )\n    ),\n    strings.contains(body.current_thread.text,\n              \
  \       \"Your mailbox can no longer send or receive messages.\"\n    ),\n    any(body.links,\n\
  \        strings.icontains(.href_url.query_params, 'redirect')\n        or any(.href_url.rewrite.encoders,\n\
  \               strings.icontains(., \"open_redirect\")\n        )\n    ),\n   \
  \ // multiple entities displaying urgency\n    length(filter(ml.nlu_classifier(body.current_thread.text).entities,\n\
  \                  .name == \"urgency\"\n           )\n    ) >= 2\n    // and any\
  \ body links\n    and any(body.links,\n            // display text contains a request\n\
  \            any(ml.nlu_classifier(.display_text).entities, .name == \"request\"\
  )\n    ),\n    any(body.links,\n        // display text contains a request\n   \
  \     any(ml.nlu_classifier(.display_text).entities, .name == \"request\")\n   \
  \     and (\n         any($url_shorteners, ..href_url.query_params == strings.concat(\"\
  domain=\",.))\n        or  any($url_shorteners, strings.ends_with(..href_url.query_params,.))\n\
  \        or (\n             any([\"mimecast.com\", \"mimecastprotect.com\"], strings.ends_with(..href_url.query_params,.))\n\
  \            and any($url_shorteners,\n                    strings.icontains(..href_url.query_params,\n\
  \                                    strings.concat('domain=', .),\n           \
  \         )\n            )\n        )\n        )\n    ),\n    // common greetings\
  \ via email.local_part\n    any(recipients.to,\n           // use count to ensure\
  \ the email address is not part of a disclaimer\n           strings.icount(body.current_thread.text,\
  \ .email.local_part) >\n           // sum allows us to add more logic as needed\n\
  \           sum([\n                 strings.icount(body.current_thread.text,\n \
  \                               strings.concat('was sent to ', .email.email)\n \
  \                ),\n                 strings.icount(body.current_thread.text,\n\
  \                                strings.concat('intended for ', .email.email)\n\
  \                 )\n               ]\n           )\n    )\n  )\n  or (\n    (\n\
  \      // recipient's email address is in the body\n      any(recipients.to,\n \
  \         // use count to ensure the email address is not part of a disclaimer\n\
  \          strings.icount(body.current_thread.text, .email.email) >\n          //\
  \ sum allows us to add more logic as needed\n          sum([\n                strings.icount(body.current_thread.text,\n\
  \                               strings.concat('was sent to ', .email.email)\n \
  \               ),\n                strings.icount(body.current_thread.text,\n \
  \                              strings.concat('intended for ', .email.email)\n \
  \               )\n              ]\n          )\n      )\n      // suspicious display\
  \ text\n      or (\n        length(body.links) == 1\n        and all(body.links,\n\
  \                strings.ilike(.display_text, \"*click here*\", \"*password*\")\n\
  \        )\n      )\n    )\n    // link leads to a suspicious TLD or contains an\
  \ IP address or contains multiple redirects\n    and any(body.links,\n         \
  \   (\n              ml.link_analysis(., mode=\"aggressive\").effective_url.domain.tld\
  \ in $suspicious_tlds\n              or length(distinct(map(ml.link_analysis(.,\
  \ mode=\"aggressive\").redirect_history,\n                                     .domain.root_domain\n\
  \                                 )\n                        )\n              )\
  \ >= 4\n              or (\n                any(body.ips,\n                    any(body.links,\
  \ strings.icontains(.href_url.url, ..ip))\n                )\n              )\n\
  \            )\n    )\n  )\n)\n// exclude Google shared calendar messages\n// Subject:\
  \ \"<sender name> has shared a calendar with you\"\nand headers.return_path.domain.domain\
  \ != \"calendar-server.bounces.google.com\"\n// negate calendar invites\nand not\
  \ (\n  0 < length(attachments) < 3\n  and all(attachments, .content_type in (\"\
  text/calendar\", \"application/ics\"))\n)\n// negate replies\nand (\n  (\n    (\n\
  \      length(headers.references) > 0\n      or not any(headers.hops,\n        \
  \         any(.fields, strings.ilike(.name, \"In-Reply-To\"))\n      )\n    )\n\
  \    and not (\n      (\n        strings.istarts_with(subject.subject, \"RE:\")\n\
  \        or strings.istarts_with(subject.subject, \"R:\")\n        or strings.istarts_with(subject.subject,\
  \ \"ODG:\")\n        or strings.istarts_with(subject.subject, \"\u7B54\u590D:\"\
  )\n        or strings.istarts_with(subject.subject, \"AW:\")\n        or strings.istarts_with(subject.subject,\
  \ \"TR:\")\n        or strings.istarts_with(subject.subject, \"FWD:\")\n       \
  \ or regex.icontains(subject.subject,\n                           '^(\\[[^\\]]+\\\
  ]\\s?){0,3}(re|fwd?)\\s?:'\n        )\n      )\n    )\n  )\n  or length(headers.references)\
  \ == 0\n)\n// bounce-back negations\nand not (\n  strings.like(sender.email.local_part,\n\
  \               \"*postmaster*\",\n               \"*mailer-daemon*\",\n       \
  \        \"*administrator*\"\n  )\n  and any(attachments,\n          .content_type\
  \ in (\n            \"message/rfc822\",\n            \"message/delivery-status\"\
  ,\n            \"text/calendar\"\n          )\n  )\n)\nand (\n  (\n    profile.by_sender().prevalence\
  \ in (\"new\", \"outlier\")\n    and not profile.by_sender().solicited\n  )\n  or\
  \ (\n    profile.by_sender().any_messages_malicious_or_spam\n    and not profile.by_sender().any_false_positives\n\
  \  )\n)\n// negate highly trusted sender domains unless they fail DMARC authentication\n\
  and (\n  (\n    sender.email.domain.root_domain in $high_trust_sender_root_domains\n\
  \    and not headers.auth_summary.dmarc.pass\n  )\n  or sender.email.domain.root_domain\
  \ not in $high_trust_sender_root_domains\n)"
tactics_and_techniques:
- Free email provider
- Social engineering
tags:
- Mimecast Hard to Fix
type: rule
