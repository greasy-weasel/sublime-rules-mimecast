attack_types:
- Credential Phishing
- Malware/Ransomware
description: |-
  This rule detects messages impersonating a Google Drive file sharing email where no links point to known Google domains.
detection_methods:
- Content analysis
- Header analysis
- URL analysis
- Computer Vision
id: b424a941-2623-50f5-a3be-e90130e538d2
name: 'Brand impersonation: Google Drive fake file share'
severity: medium
source: "type.inbound\n\n// Google Drive body content looks like this\nand (\n  (\n\
  \    (\n      any([body.current_thread.text, body.plain.raw],\n          strings.ilike(.,\n\
  \                        \"*shared a file with you*\",\n                       \
  \ \"*shared with you*\",\n                        \"*invited you to review*\",\n\
  \                        \"*received a document*\",\n                        \"\
  *shared a document*\",\n                        \"*shared this document*\",\n  \
  \                      \"*shared an item*\",\n                        \"*received\
  \ this email because you*\",\n                        \"*shared a*with you*\"\n\
  \          )\n      )\n      or any(file.explode(file.message_screenshot()),\n \
  \            strings.ilike(.scan.ocr.raw,\n                           \"*shared\
  \ a file with you*\",\n                           \"*shared with you*\",\n     \
  \                      \"*invited you to review*\",\n                          \
  \ \"*received a document*\",\n                           \"*shared a document*\"\
  ,\n                           \"*shared this document*\",\n                    \
  \       \"*shared an item*\",\n                           \"*received this email\
  \ because you*\",\n                           \"*shared a*with you*\"\n        \
  \     )\n      )\n    )\n    and (\n      strings.ilike(subject.subject,\n     \
  \               \"*shared*\",\n                    \"*updated*\",\n            \
  \        \"*sign*\",\n                    \"*review*\"\n      )\n      or any(recipients.to,\
  \ strings.icontains(subject.subject, .email.domain.sld))\n      or strings.ilike(subject.subject,\
  \ \"*Docs*\", \"*Sheets*\", \"*Slides*\")\n      or any(body.links, strings.icontains(.display_text,\
  \ \"open document\"))\n      or strings.ilike(sender.display_name, \"*Google Drive*\"\
  )\n      or subject.subject is null\n      or subject.subject == \"\"\n    )\n \
  \ )\n  or any([\n           \"Contigo\", // Spanish\n           \"Avec vous\", //\
  \ French\n           \"Mit Ihnen\", // German\n           \"Con te\", // Italian\n\
  \           \"Com voc\xEA\", // Portuguese\n           \"Met u\", // Dutch\n   \
  \        \"\u0421 \u0432\u0430\u043C\u0438\", // Russian\n           \"\u4E0E\u4F60\
  \", // Chinese (Simplified)\n           \"\u8207\u60A8\", // Chinese (Traditional)\n\
  \           \"\u3042\u306A\u305F\u3068\", // Japanese\n           \"\uB2F9\uC2E0\
  \uACFC\", // Korean\n           \"\u0645\u0639\u0643\", // Arabic\n           \"\
  \u0622\u067E \u06A9\u06D2 \u0633\u0627\u062A\u06BE\", // Urdu\n           \"\u0986\
  \u09AA\u09A8\u09BE\u09B0 \u09B8\u09BE\u09A5\u09C7\", // Bengali\n           \"\u0906\
  \u092A\u0915\u0947 \u0938\u093E\u0925\", // Hindi\n           \"Sizinle\", // Turkish\
  \ // Azerbaijani\n           \"Med dig\", // Swedish\n           \"Z tob\u0105\"\
  , // Polish\n           \"\u0417 \u0432\u0430\u043C\u0438\", // Ukrainian\n    \
  \       \"\xD6nnel\", // Hungarian\n           \"\u039C\u03B1\u03B6\u03AF \u03C3\
  \u03B1\u03C2\", // Greek\n           \"\u05D0\u05D9\u05EA\u05DA\", // Hebrew\n \
  \          \"\u0E01\u0E31\u0E1A\u0E04\u0E38\u0E13\", // Thai\n           \"V\u1EDB\
  i b\u1EA1n\", // Vietnamese\n           \"Dengan Anda\", // Indonesian // Malay\n\
  \           \"Nawe\", // Swahili\n           \"Cu dumneavoastr\u0103\", // Romanian\n\
  \           \"S v\xE1mi\", // Czech\n           \"Med deg\", // Norwegian\n    \
  \       \"S vami\", // Slovak\n           \"Med dig\", // Danish\n           \"\
  Amb vost\xE8\", // Catalan\n           \"Teiega\", // Estonian\n           \"S vama\"\
  , // Serbian\n         ],\n         strings.icontains(subject.subject, .)\n  )\n\
  )\n\n// contains logic that impersonates Google\nand (\n  any(ml.logo_detect(file.message_screenshot()).brands,\n\
  \      strings.starts_with(.name, \"Google\")\n  )\n  or any(attachments,\n    \
  \     .file_type in $file_types_images\n         and any(ml.logo_detect(.).brands,\
  \ strings.starts_with(.name, \"Google\"))\n  )\n  or strings.icontains(body.current_thread.text,\n\
  \                       strings.concat(\"You have received this email because \"\
  ,\n                                      sender.email.email,\n                 \
  \                     \" shared a document with you\"\n                       )\n\
  \  )\n  or strings.icontains(body.current_thread.text,\n                       strings.concat(\"\
  You have received this email because \",\n                                     \
  \ sender.email.email,\n                                      \" received a file\
  \ or folder\"\n                       )\n  )\n  or any(recipients.to,\n        \
  \ strings.icontains(body.current_thread.text,\n                           strings.concat(\"\
  You have received this email because \",\n                                     \
  \     .email.email,\n                                          \" shared a document\
  \ with you\"\n                           )\n         )\n  )\n  or any(recipients.to,\n\
  \         strings.icontains(body.current_thread.text,\n                        \
  \   strings.concat(\"You have received this email because \",\n                \
  \                          .email.email,\n                                     \
  \     \" received a file or folder\"\n                           )\n         )\n\
  \  )\n  // Google address from footer\n  or 2 of (\n    strings.icontains(body.current_thread.text,\
  \ 'Google LLC'),\n    strings.icontains(body.current_thread.text, '1600 Amphitheatre\
  \ Parkway'),\n    strings.icontains(body.current_thread.text, 'Mountain View, CA\
  \ 94043'),\n  )\n)\nand not all(body.links,  any([\"google.com\"], strings.ends_with(..href_url.query_params,.))\
  \ )\nand sender.email.domain.root_domain not in $org_domains\nand sender.email.domain.root_domain\
  \ not in (\"google.com\")\nand not (\n  all(headers.references, strings.ends_with(.,\
  \ '@docs-share.google.com'))\n  and headers.return_path.domain.domain == \"doclist.bounces.google.com\"\
  \n)\n\n// negate highly trusted sender domains unless they fail DMARC authentication\n\
  and (\n  (\n    sender.email.domain.root_domain in $high_trust_sender_root_domains\n\
  \    and not headers.auth_summary.dmarc.pass\n  )\n  or sender.email.domain.root_domain\
  \ not in $high_trust_sender_root_domains\n)\nand (\n  profile.by_sender().solicited\
  \ == false\n  or profile.by_sender_email().prevalence == \"new\"\n  or (\n    profile.by_sender().any_messages_malicious_or_spam\n\
  \    and not profile.by_sender().any_messages_benign\n  )\n)\nand not profile.by_sender().any_messages_benign"
tactics_and_techniques:
- 'Impersonation: Brand'
- Social engineering
tags:
- Mimecast Changes Complete
type: rule
