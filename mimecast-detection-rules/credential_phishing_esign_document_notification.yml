attack_types:
- Credential Phishing
description: Detects phishing attempts disguised as e-signature requests, characterized
  by common document sharing phrases, unusual HTML padding, and suspicious link text.
detection_methods:
- Content analysis
- Header analysis
- HTML analysis
- URL analysis
- Sender analysis
id: 9b68c2d8-951e-5e04-9fa3-2ca67d9226a6
name: 'Credential Phishing: Suspicious E-sign Agreement Document Notification'
severity: medium
source: "type.inbound\nand any([subject.subject, sender.display_name],\n        regex.icontains(strings.replace_confusables(.),\n\
  \                        \"D[0o]cuLink\",\n                        \"Agreement\"\
  ,\n                        \"Access.&.Appr[0o]ved\",\n                        \"\
  Agreement.{0,5}Review\",\n                        \"Attend.and.Review\",\n     \
  \                   \"action.re?quired\",\n                        \"Completed.File\"\
  ,\n                        \"D[0o]chsared\",\n                        \"D[0o]cshared\"\
  ,\n                        \"D[0o]csPoint\",\n                        \"D[0o]cument.Shared\"\
  ,\n                        \"D[0o]cuCentre\",\n                        \"D[0o]cuCenter\"\
  ,\n                        \"D[0o]cCenter\",\n                        \"D[0o]csOnline\"\
  ,\n                        \"D[0o]cSend\",\n                        \"D[0o]cu?Send\"\
  ,\n                        \"d[0o]csign\",\n                        \"D[0o]cu-eSin\"\
  ,\n                        \"D[0o]cu-management\",\n                        \"\\\
  \\beSign\",\n                        \"e\\\\.sign\",\n                        \"\
  esign.[0o]nline\",\n                        \"e-d[0o]c\",\n                    \
  \    \"e-signature\",\n                        \"eSignature\",\n               \
  \         \"eSign&Return\",\n                        \"eSign[0o]nline\",\n     \
  \                   \"Fileshare\",\n                        \"Review.and.C[0o]mplete\"\
  ,\n                        \"Review.&.Sign\",\n                        \"Sign[0o]nline\"\
  ,\n                        \"Signature.Request\",\n                        \"Shared.C[0o]mpleted\"\
  ,\n                        \"Sign.and.Seal\",\n                        \"viaSign\"\
  ,\n                        \"D[0o]cuSign\",\n                        \"D[0o]csID\"\
  ,\n                        \"Complete.{0,10}D[0o]cuSign\",\n                   \
  \     \"Enroll & Sign\",\n                        \"Review and Sign\",\n       \
  \                 \"SignReport\",\n                        \"SignD[0o]c\",\n   \
  \                     \"D[0o]cxxx\",\n                        \"d[0o]cufile\",\n\
  \                        \"E\xAD-\xADS\xADi\xADg\xADn\xAD&Return\",\n          \
  \              \"d[0o]cument.signature\",\n                        \"Electr[0o]nic.?Signature\"\
  ,\n                        \"Complete: \",\n                        \"Please Review\"\
  ,\n                        \"^REVIEW$\",\n                        \"requests your\
  \ signature\",\n                        \"signature on.*contract\",\n          \
  \              \"Independent Contract\",\n                        \"Contract.*signature\"\
  ,\n                        \"add your signature\",\n                        \"signature\
  \ needed\"\n        )\n)\nand (\n  // unusual repeated patterns in HTML\n  regex.icontains(body.html.raw,\
  \ '((<br\\s*/?>\\s*){20,}|\\n{20,})')\n  or regex.icontains(body.html.raw, '(<p[^>]*>\\\
  s*<br\\s*/?>\\s*</p>\\s*){30,}')\n  or regex.icontains(body.html.raw,\n        \
  \             '(<p class=\".*?\"><span style=\".*?\"><o:p>&nbsp;</o:p></span></p>\\\
  s*){30,}'\n  )\n  or regex.icontains(body.html.raw, '(<p>&nbsp;</p>\\s*){7,}')\n\
  \  or regex.icontains(body.html.raw, '(<p[^>]*>\\s*&nbsp;<br>\\s*</p>\\s*){5,}')\n\
  \  or regex.icontains(body.html.raw, '(<p[^>]*>&nbsp;</p>\\s*){7,}')\n  or strings.count(body.html.raw,\
  \ '&nbsp;\u200C&nbsp;\u200C&nbsp') > 50\n  or regex.count(body.html.raw,\n     \
  \            '<span\\s*class\\s*=\\s*\"[^\\\"]+\"\\s*>\\s*[a-z]\\s*<\\/span><span\\\
  s*class\\s*=\\s*\"[^\\\"]+\"\\s*>\\s*[a-z]+\\s*<\\/span>'\n  ) > 50\n  // lookalike\
  \ docusign\n  or regex.icontains(body.html.raw, '>Docus[1l]gn<')\n  or (\n    regex.icontains(body.html.inner_text,\
  \ 'Document')\n    and length(body.html.inner_text) < 300\n  )\n  // common greetings\
  \ via email.local_part\n  or any(recipients.to,\n         // use count to ensure\
  \ the email address is not part of a disclaimer\n         strings.icount(body.current_thread.text,\
  \ .email.local_part) >\n         // sum allows us to add more logic as needed\n\
  \         sum([\n               strings.icount(body.current_thread.text,\n     \
  \                         strings.concat('was sent to ', .email.email)\n       \
  \        ),\n               strings.icount(body.current_thread.text,\n         \
  \                     strings.concat('intended for ', .email.email)\n          \
  \     )\n             ]\n         )\n  )\n  // Abnormally high count of mailto links\
  \ in raw html\n  or regex.count(body.html.raw,\n                 'mailto:[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\
  .[A-Za-z]{2,}'\n  ) > 50\n\n  // High count of empty elements (padding)\n  or regex.count(body.html.raw,\n\
  \                 '<(?:p|div|span|td)[^>]*>\\s*(?:&nbsp;|\\s)*\\s*</(?:p|div|span|td)>'\n\
  \  ) > 30\n\n  // HR impersonation\n  or strings.ilike(sender.display_name, \"HR\"\
  , \"H?R\", \"*Human Resources*\")\n)\nand (\n  any(body.links,\n\n      // suspicious\
  \ content within link display_text\n      regex.icontains(strings.replace_confusables(.display_text),\n\
  \                      \"activate\",\n                      \"re-auth\",\n     \
  \                 \"verify\",\n                      \"acknowledg\",\n         \
  \             \"(keep|change).{0,20}(active|password|access)\",\n              \
  \        '((verify|view|click|download|goto|keep|V\u03B9ew|release).{0,15}(attachment|current|download|fax|file|document|message|same)s?)',\n\
  \                      'use.same.pass',\n                      'validate.{0,15}account',\n\
  \                      'recover.{0,15}messages',\n                      '(retry|update).{0,10}payment',\n\
  \                      'check activity',\n                      '(listen|play).{0,10}(vm|voice)',\n\
  \                      'clarify.{0,20}(deposit|wallet|funds)',\n               \
  \       'enter.{0,15}teams',\n                      'Review and sign',\n       \
  \               'REVIEW.*DOCUMENT'\n      )\n      // check that the display_text\
  \ is all lowercase\n      or (\n        regex.contains(.display_text,\n        \
  \               \"\\\\bVIEW\",\n                       \"DOWNLOAD\",\n         \
  \              \"CHECK\",\n                       \"KEEP.(SAME|MY)\",\n        \
  \               \"VERIFY\",\n                       \"ACCESS\\\\b\",\n         \
  \              \"SIGN\\\\b\",\n                       \"ENABLE\\\\b\",\n       \
  \                \"RETAIN\",\n                       \"PLAY\",\n               \
  \        \"LISTEN\",\n        )\n        and regex.match(.display_text, \"^[^a-z]*[A-Z][^a-z]*$\"\
  )\n      )\n\n      // the display text is _exactly_\n      or .display_text in~\
  \ (\"Open\")\n  )\n  // one hyperlinked image that's not a tracking pixel\n  or\
  \ (\n    length(html.xpath(body.html,\n                      \"//a//img[(number(@width)\
  \ > 5 or not(@width)) and (number(@height) > 5 or not(@height))]\"\n           ).nodes\n\
  \    ) == 1\n    and length(body.current_thread.text) < 500\n  )\n  or (\n    length(attachments)\
  \ > 0\n    and any(attachments,\n            (\n              regex.icontains(beta.ocr(.).text,\n\
  \                              \"activate\",\n                              \"re-auth\"\
  ,\n                              \"verify\",\n                              \"acknowledg\"\
  ,\n                              \"(keep|change).{0,20}(active|password|access)\"\
  ,\n                              '((verify|view|click|download|goto|keep|V\u03B9\
  ew|release).{0,15}(attachment|current|download|fax|file|document|message|same)s?)',\n\
  \                              'use.same.pass',\n                              'validate.{0,15}account',\n\
  \                              'recover.{0,15}messages',\n                     \
  \         '(retry|update).{0,10}payment',\n                              'check\
  \ activity',\n                              '(listen|play).{0,10}(vm|voice)',\n\
  \                              'clarify.{0,20}(deposit|wallet|funds)',\n       \
  \                       'enter.{0,15}teams',\n                              'Review\
  \ and sign'\n              )\n            )\n            or (\n              any(file.explode(.),\n\
  \                  regex.icontains(.scan.ocr.raw,\n                            \
  \      \"activate\",\n                                  \"re-auth\",\n         \
  \                         \"verify\",\n                                  \"acknowledg\"\
  ,\n                                  \"(keep|change).{0,20}(active|password|access)\"\
  ,\n                                  '((verify|view|click|download|goto|keep|V\u03B9\
  ew|release).{0,15}(attachment|current|download|fax|file|document|message|same)s?)',\n\
  \                                  'use.same.pass',\n                          \
  \        'validate.{0,15}account',\n                                  'recover.{0,15}messages',\n\
  \                                  '(retry|update).{0,10}payment',\n           \
  \                       'check activity',\n                                  '(listen|play).{0,10}(vm|voice)',\n\
  \                                  'clarify.{0,20}(deposit|wallet|funds)',\n   \
  \                               'enter.{0,15}teams',\n                         \
  \         'Review and sign'\n                  )\n              )\n            )\n\
  \    )\n  )\n)\nand (\n  not profile.by_sender_email().solicited\n  or profile.by_sender_email().prevalence\
  \ == \"new\"\n  or (\n    profile.by_sender_email().any_messages_malicious_or_spam\n\
  \    and not profile.by_sender_email().any_messages_benign\n  )\n)\nand not profile.by_sender_email().any_messages_benign\n\
  \n// negate replies/fowards containing legitimate docs\nand not (\n  length(headers.references)\
  \ > 0\n  or any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\"\
  )))\n)\n\n// negate highly trusted sender domains unless they fail DMARC authentication\n\
  and (\n  (\n    sender.email.domain.root_domain in $high_trust_sender_root_domains\n\
  \    and (\n      any(distinct(headers.hops, .authentication_results.dmarc is not\
  \ null),\n          strings.ilike(.authentication_results.dmarc, \"*fail\")\n  \
  \    )\n    )\n  )\n  or sender.email.domain.root_domain not in $high_trust_sender_root_domains\n\
  )"
tactics_and_techniques:
- Social engineering
tags: []
type: rule
