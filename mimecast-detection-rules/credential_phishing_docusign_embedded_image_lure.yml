attack_types:
- Credential Phishing
description: Detects DocuSign phishing emails with no DocuSign links, a DocuSign logo
  embedded in the body of the message, from a new sender.
detection_methods:
- Computer Vision
- Content analysis
- Header analysis
- Natural Language Understanding
- Optical Character Recognition
- Sender analysis
id: dfe8715e-6318-579b-9131-ddfc9854dc95
name: 'Credential Phishing: DocuSign embedded image lure with no DocuSign domains
  in links'
severity: high
source: "type.inbound\n\n// link boundary\nand length(filter(body.links, .href_url.domain.valid))\
  \ < 25\n\n// there are no attachments, or only small, likely signature images\n\
  and (\n  length(attachments) == 0\n  or (\n    length(attachments) > 0\n    and\
  \ all(attachments, .size < 8000 and .file_type in $file_types_images)\n  )\n)\n\n\
  // Screenshot indicates a docusign logo or docusign name with cta to documents\n\
  and (\n  any(file.explode(beta.message_screenshot()),\n      (\n        strings.ilike(.scan.ocr.raw,\
  \ \"*DocuSign*\")\n        or any(ml.logo_detect(beta.message_screenshot()).brands,\n\
  \               .name == \"DocuSign\"\n        )\n      )\n      and (\n       \
  \ (\n          (\n            regex.icontains(.scan.ocr.raw,\n                 \
  \           \"((re)?view|access|sign|complete(d)?) documen(t)?(s)?\",\n        \
  \                    \"Your document has been completed\",\n                   \
  \         \"New Document Shared with you\",\n                            \"Kindly\
  \ click the link\",\n                            \"important edocs\",\n        \
  \                    // German (Document (check|check|sign|sent))\n            \
  \                \"Dokument (\xFCberpr\xFCfen|pr\xFCfen|unterschreiben|geschickt)\"\
  ,\n            )\n            // German (important|urgent|immediate) but not in\
  \ the Microsoft link\n            or (\n              (\n                any(body.links,\n\
  \                    .display_text == \"Erfahren Sie, warum dies wichtig ist\"\n\
  \                    and .href_url.url == \"https://aka.ms/LearnAboutSenderIdentification\"\
  \n                )\n                and regex.icount(.scan.ocr.raw, \"(wichtig|dringend|sofort)\"\
  ) > 1\n              )\n              or (\n                not any(body.links,\n\
  \                        .display_text == \"Erfahren Sie, warum dies wichtig ist\"\
  \n                        and .href_url.url == \"https://aka.ms/LearnAboutSenderIdentification\"\
  \n                )\n                and regex.icount(.scan.ocr.raw, \"(wichtig|dringend|sofort)\"\
  ) > 0\n              )\n            )\n          )\n          and any(body.links,\n\
  \                  not strings.ilike(.href_url.domain.root_domain, \"docusign.*\"\
  )\n                  and (.display_text is null and .display_url.url is null)\n\
  \          )\n        )\n        or any(body.links,\n               not strings.ilike(.href_url.domain.root_domain,\
  \ \"docusign.*\")\n               and regex.icontains(.display_text,\n         \
  \                          '(\\bdocument|(view|get your) (docu|file))'\n       \
  \        )\n        )\n      )\n  )\n)\n\n// links with null display_text that do\
  \ not go to docusign.* (indicative of hyperlinked image) or the display text contains\
  \ DOCUMENT\nand (\n  not profile.by_sender().solicited\n  or (\n    profile.by_sender().any_messages_malicious_or_spam\n\
  \    and not profile.by_sender().any_messages_benign\n  )\n)\n// negate highly trusted\
  \ sender domains unless they fail DMARC authentication\nand (\n  (\n    sender.email.domain.root_domain\
  \ in $high_trust_sender_root_domains\n    and not headers.auth_summary.dmarc.pass\n\
  \  )\n  or sender.email.domain.root_domain not in $high_trust_sender_root_domains\n\
  )\n\n// negate legit replies\nand not (\n  length(headers.references) > 0\n  or\
  \ any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\")))\n)\nand\
  \ not profile.by_sender().any_messages_benign\n\n// negate docusign X-Return-Path\n\
  and not any(headers.hops,\n            .index == 0\n            and any(.fields,\n\
  \                    .name == \"X-Return-Path\"\n                    and strings.ends_with(.value,\
  \ \"docusign.net\")\n            )\n)\n\n// negate \"via\" senders via dmarc authentication\n\
  and (\n  not coalesce(headers.auth_summary.dmarc.pass\n               and strings.contains(sender.display_name,\
  \ \"via\")\n               and sender.email.domain.domain in $org_domains,\n   \
  \            false\n  )\n)"
tactics_and_techniques:
- 'Impersonation: Brand'
- Social engineering
tags:
- Mimecast Hard to Fix
type: rule
